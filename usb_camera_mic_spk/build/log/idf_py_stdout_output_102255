[1/10] Performing build step for 'bootloader'
[1/1] cd /home/mw/git/esp32s3_usb_camera/usb_camera_mic_spk/build/bootloader/esp-idf/esptool_py && /home/mw/.espressif/python_env/idf5.1_py3.9_env/bin/python /home/mw/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/mw/git/esp32s3_usb_camera/usb_camera_mic_spk/build/bootloader/bootloader.bin
Bootloader binary size 0x51d0 bytes. 0x2e30 bytes (36%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable usb_camera_mic_spk.elf
[6/8] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/mw/git/esp32s3_usb_camera/usb_camera_mic_spk/build/usb_camera_mic_spk.bin
[7/8] cd /home/mw/git/esp32s3_usb_camera/usb_camera_mic_spk/build/esp-idf/esptool_py && /home/mw/.espressif/python_env/idf5.1_py3.9_env/bin/python /home/mw/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/mw/git/esp32s3_usb_camera/usb_camera_mic_spk/build/partition_table/partition-table.bin /home/mw/git/esp32s3_usb_camera/usb_camera_mic_spk/build/usb_camera_mic_spk.bin
usb_camera_mic_spk.bin binary size 0xdfc00 bytes. Smallest app partition is 0x100000 bytes. 0x20400 bytes (13%) free.
[7/8] cd /home/mw/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/mw/esp/esp-idf -D "SERIAL_TOOL=/home/mw/.espressif/python_env/idf5.1_py3.9_env/bin/python;;/home/mw/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/mw/git/esp32s3_usb_camera/usb_camera_mic_spk/build -P /home/mw/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 usb_camera_mic_spk.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-S3 (QFN56) (revision v0.1)
Features: WiFi, BLE, Embedded Flash 8MB (GD)
Crystal is 40MHz
MAC: f4:12:fa:6d:61:b8
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x000effff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 20944 bytes to 13291...
Writing at 0x00000000... (100 %)
Wrote 20944 bytes (13291 compressed) at 0x00000000 in 0.6 seconds (effective 285.0 kbit/s)...
Hash of data verified.
Compressed 916480 bytes to 570256...
Writing at 0x00010000... (2 %)
Writing at 0x0001aa6c... (5 %)
Writing at 0x00027b49... (8 %)
Writing at 0x00031166... (11 %)
Writing at 0x00036121... (14 %)
Writing at 0x00040974... (17 %)
Writing at 0x00046c71... (20 %)
Writing at 0x0004cd6e... (22 %)
Writing at 0x00052e6f... (25 %)
Writing at 0x00058d13... (28 %)
Writing at 0x0005ec55... (31 %)
Writing at 0x00064a0b... (34 %)
Writing at 0x0006a520... (37 %)
Writing at 0x0006f3fd... (40 %)
Writing at 0x00074636... (42 %)
Writing at 0x00079533... (45 %)
Writing at 0x0007e8fc... (48 %)
Writing at 0x00083c92... (51 %)
Writing at 0x0008931a... (54 %)
Writing at 0x0008f083... (57 %)
Writing at 0x000945a4... (60 %)
Writing at 0x00099e93... (62 %)
Writing at 0x0009f75e... (65 %)
Writing at 0x000a4db0... (68 %)
Writing at 0x000aa665... (71 %)
Writing at 0x000b00dc... (74 %)
Writing at 0x000b66d6... (77 %)
Writing at 0x000bc568... (80 %)
Writing at 0x000c193e... (82 %)
Writing at 0x000ca4a0... (85 %)
Writing at 0x000d27b6... (88 %)
Writing at 0x000d98c6... (91 %)
Writing at 0x000df94d... (94 %)
Writing at 0x000e5836... (97 %)
Writing at 0x000eb238... (100 %)
Wrote 916480 bytes (570256 compressed) at 0x00010000 in 14.1 seconds (effective 518.8 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 538.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
